{
    "name": "While Programming Language",
    "scopeName": "source.while",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#languageFunctions"
        },
        {
            "include": "#controls"
        },
        {
            "include": "#blocElements"
        },
        {
            "include": "#functionDefinition"
        },
        {
            "include": "#variable"
        },
        {
            "include": "#constantNumbers"
        },
        {
            "include": "#operator"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "match": "(//).*$\\n?",
                    "name": "comment.line.double-slash"
                }
            ]
        },
        "blocElements": {
            "match": "(begin|end)",
            "name": "keyword.other"
        },
        "languageFunctions": {
            "patterns": [
                {
                    "match": "(read|write|succ|pred)",
                    "name": "support.function"
                },
                {
                    "include": "#parameters"
                }
            ]
        },
        "controls": {
            "patterns": [
                {
                    "match": "(loop|while|return|var)",
                    "name": "keyword.control"
                },
                {
                    "include": "#parameters"
                }
            ]
        },
        "functionDefinition": {
            "begin": "def",
            "beginCaptures": {
                "0": {
                    "name": "storage.type"
                }
            },
            "end": "(begin|;)",
            "endCaptures": {
                "0": {
                    "name": "keyword.other"
                }
            },
            "name": "entity.name.function",
            "patterns": [
                {
                    "include": "#parameters"
                }
            ]
        },
        "parameters": {
            "begin": "\\(",
            "beginCaptures": {
                "0": {
                    "name": "storage.type"
                }
            },
            "end": "\\)",
            "endCaptures": {
                "0": {
                    "name": "storage.type"
                }
            },
            "name": "variable.parameter"
        },
        "variable": {
            "match": "[a-zA-Z][a-zA-Z0-9]*",
            "name": "variable.other"
        },
        "constantNumbers": {
            "match": "(\\0 | [1-9][0-9]*)",
            "name": "support.constant"
        },
        "operator": {
            "match": "(:=|;|:)",
            "name": "keyword.operator"
        }
    }
}